# This is a basic workflow to help you get started with Actions

name: CI to Docker Hub

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ucatbot:latest
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  deploy:
      runs-on: ubuntu-latest   
      needs: [build]

      steps:
        - name: Deploy to VPS
          uses: appleboy/ssh-action@master
          # TODO: add env vars as secrets on GitHub
          with:
            # VPS IP
            host: ${{ secrets.VPS_SSH_HOST }}
            # VPS username
            username: ${{ secrets.VPS_SSH_USERNAME }}
            # SSH key (copy it from your local machine)
            key: ${{ secrets.VPS_SSH_SECRET }}
            # SSH port
            port: 21
            script: |
              echo "Pull new image"
              docker-compose -f /root/code/ucat-bot/docker-compose.yml pull
              echo "Restart the container"
              docker-compose -f /root/code/ucat-bot/docker-compose.yml up --force-recreate --build --no-deps -d
              echo "Delete old image"
              docker image prune -f
